---
downloads: ~/.ansible-downloads/

configure_terminal: false

# Set to 'true' to configure the Dock via dockutil.
configure_dock: true
dockitems_remove:
  - "App Store"
  - Calendar
  - Contacts
  - FaceTime
  - Freeform
  - iTerm
  - Keynote
  - kitty
  - Launchpad
  - Mail
  - Maps
  - Music
  - Notes
  - Numbers
  - Pages
  - Photos
  - Podcasts
  - TV
dockitems_persist:
  - name: "Safari"
    path: "/Applications/Safari.app/"
    pos: 1
  - name: "Messages"
    path: "/System/Applications/Messages.app/"
    pos: 2
  - name: "Reminders"
    path: "/System/Applications/Reminders.app/"
    pos: 3
  - name: "iTerm"
    path: "/Applications/iTerm.app/"
    pos: 4
  - name: "Slack"
    path: "/Applications/Slack.app/"
    pos: 5
  - name: "System Settings"
    path: "/System/Applications/System%20Settings.app/"
    pos: 6

configure_sudoers: false
sudoers_custom_config: ""
# Example:
# sudoers_custom_config: |
#   # Allow users in admin group to use sudo with no password.
#   %admin ALL=(ALL) NOPASSWD: ALL

# Set to 'true' to install dotfiles
configure_dotfiles: true
dotfiles_repo: https://github.com/monrad/dotfiles.git
dotfiles_repo_accept_hostkey: true
dotfiles_repo_local_destination: ~/git/bootstrap/dotfiles
dotfiles_repo_version: main
dotfiles_files:
  - .config/nvim/init.lua
  - .config/nvim/lua
  - .local/bin/code-sessionizer
  - .local/bin/elgato
  - .local/bin/it2setcolor
  - .local/bin/tmux-sessionizer
  - .osx
  - .p10k.zsh
  - .tmux.conf
  - .zshrc

homebrew_installed_packages:
  # - ansible # Installed via Pip.
  - bat
  - coreutils
  - fd
  - fzf
  - gh
  - git
  - git-lfs
  - gnupg
  - go
  - httpie
  - irrtoolset
  - jq
  - mtr
  - neovim
  - node
  - pinentry-mac
  - pwgen
  - pyenv
  - ripgrep
  - sipcalc
  - telnet
  - tmate
  - tmux
  - wget
  - whois
  - xping
  - zsh-autosuggestions
  - zsh-syntax-highlighting

homebrew_taps:
  - homebrew/cask-fonts
  - homebrew/cask-versions
  - martintopholm/xping

homebrew_cask_accept_external_apps: true
homebrew_cask_appdir: /Applications
homebrew_cask_apps:
  - docker
  - drawio
  - elgato-camera-hub
  - elgato-control-center
  - elgato-stream-deck
  - elgato-wave-link
  - firefox
  - font-hack-nerd-font
  - font-sf-mono
  - font-symbols-only-nerd-font
  - google-chrome
  - google-earth-pro
  - iterm2
  - rectangle
  - serial
  - signal
  - slack
  - sublime-text
  - telegram
  - utm
  - visual-studio-code
  - visual-studio-code-insiders
  - whatsapp
  - wireshark
  - zoom

# See `geerlingguy.mas` role documentation for usage instructions.
mas_installed_apps:
  - { id: 409183694, name: "Keynote" }
  - { id: 409201541, name: "Pages" }
  - { id: 409203825, name: "Numbers" }
mas_uninstalled_apps:
  - { id: 1384080005, name: "Tweetbot 3 for Twitter" }
  - { id: 408981434, name: "iMovie" }
  - { id: 413857545, name: "Divvy - Window Manager" }
  - { id: 682658836, name: "GarageBand" }
mas_email: ""
mas_password: ""

# Set to 'true' to configure osx defaults
configure_osx: true
osx_script: "~/.osx --no-restart"

# Install packages from other package managers.
# Note: You are responsible for making sure the required package managers are
# installed, eg. through homebrew.
composer_packages: []
# - name: drush
#   state: present # present/absent, default: present
#   version: "^8.1" # default: N/A
gem_packages: []
# - name: bundler
#   state: present # present/absent/latest, default: present
#   version: "~> 1.15.1" # default: N/A
npm_packages: []
# - name: webpack
#   state: present # present/absent/latest, default: present
#   version: "^2.6" # default: N/A
# pip_packages: []
# - name: mkdocs
#   state: present # present/absent/latest, default: present
#   version: "0.16.3" # default: N/A
pip_packages:
  - name: git-cu
    state: latest

# Glob pattern to ansible task files to run after all other tasks are finished.
post_provision_tasks: "{{ playbook_dir }}/../tasks/*.yml"

# Pyenv config
# # Latest Python versions
pyenv_stable_version: "3.9.16"
pyenv_python38_version: "3.8.16"
pyenv_python39_version: "3.9.16"
pyenv_python310_version: "3.10.9"
pyenv_python311_version: "3.11.1"

# Python versions to install
pyenv_python_versions:
  - "{{ pyenv_python38_version }}"
  - "{{ pyenv_python39_version }}"
  - "{{ pyenv_python310_version }}"
  - "{{ pyenv_python311_version }}"

# Set global pyenv version
pyenv_global: "{{ pyenv_stable_version }} system"
