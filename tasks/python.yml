---
- name: Install Python interpreters # noqa 305
  ansible.builtin.shell: >-
    pyenv install {{ item }}
  args:
    creates: "~/.pyenv/versions/{{ item }}/bin/python"
  with_items: "{{ pyenv_python_versions }}"
  tags: ["python"]

- name: Get current global version # noqa 305
  ansible.builtin.shell: >-
    pyenv global
  register: pyenv_global_version
  changed_when: false
  tags: ["python"]

- name: Set pyenv_global_active fact
  ansible.builtin.set_fact:
    pyenv_global_active: "{{ pyenv_global_version.stdout_lines |
      join(' ') | trim() }}"
  tags: ["python"]

- name: Check if 'system' version is available # noqa 305
  ansible.builtin.shell: >-
    pyenv versions
  register: pyenv_versions
  changed_when: false
  failed_when: false
  when: "'system' in pyenv_global"
  tags: ["python"]

- name: Remove 'system' from pyenv_global
  ansible.builtin.set_fact:
    pyenv_global: "{{ pyenv_global | replace('system', '') | trim() }}"
  when: "'system' in pyenv_global and 'system' not in pyenv_versions.stdout"
  tags: ["python"]

- name: Set pyenv global version to '{{ pyenv_global }}'
  ansible.builtin.shell: >-
    pyenv global {{ pyenv_global }} &&
    pyenv rehash
  when: "pyenv_global is defined and pyenv_global_active != pyenv_global"
  tags: ["python"]

- name: Install Poetry
  ansible.builtin.shell: >-
    curl -sSL https://install.python-poetry.org | python -
  args:
    creates: "~/Library/Application Support/pypoetry/"
  tags: ["python"]

- name: Check Poetry virtualenvs.in-project config
  ansible.builtin.command: poetry config virtualenvs.in-project
  register: poetry_in_project
  changed_when: false
  tags: ["python"]

- name: Configure Poetry virtualenvs.in-project
  ansible.builtin.command: poetry config virtualenvs.in-project true
  when: poetry_in_project.stdout != "true"
  tags: ["python"]

- name: Check Poetry prefer-active-python config
  ansible.builtin.command: >-
    poetry config virtualenvs.prefer-active-python
  register: poetry_prefer_active_python
  changed_when: false
  tags: ["python"]

- name: Configure Poetry prefer-active-python
  ansible.builtin.shell: >-
    poetry config virtualenvs.prefer-active-python true
  when: poetry_prefer_active_python.stdout != "true"
  tags: ["python"]
